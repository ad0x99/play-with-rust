name: Build, Test & Publish to Docker

on:
  push:
    branches:
      - feature/the-rust-developer-bootcamp # Trigger the workflow on push to branch
  pull_request:
    branches:
      - feature/the-rust-developer-bootcamp # Trigger the workflow on pull request to branch

jobs:
  build:
    runs-on: ubuntu-22.04 # Use the latest Ubuntu runner

    steps:
      - name: Install Protocol Buffers compiler
        uses: arduino/setup-protoc@v1 # Install Protocol Buffers compiler

      - name: Checkout code
        uses: actions/checkout@v2 # Checkout the repository code

      - name: Cache dependencies
        uses: actions/cache@v3 # Cache the dependencies to speed up the workflow
        with:
          path: |
            ~/.cargo  # Cache the Cargo directory
            target/  # Cache the target directory
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }} # Cache key based on OS and Cargo.lock file
          restore-keys: ${{ runner.os }}-cargo- # Restore key prefix

      - name: Install Rust
        uses: actions-rs/toolchain@v1 # Install the Rust toolchain
        with:
          profile: minimal # Use the minimal profile
          toolchain: stable # Use the stable toolchain

      - name: Build and test code
        run: |
          cd ./projects/microservices-with-rust  # Navigate to the subfolder
          cargo build --verbose  # Build the code with verbose output
          cargo test --verbose  # Test the code with verbose output

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Setup Docker Buildx

      - name: Log in to Docker Hub
        uses: docker/login-action@v2 # Log in to Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub password

      - name: Check if docker-compose.yaml exists
        run: ls -R ./projects/microservices-with-rust | grep -E "docker|Docker"

      - name: Build and push Docker images
        uses: docker/bake-action@v2.3.0 # Build and push Docker images
        with:
          # Point to the docker-compose configuration file used for the CI process
          files: ./projects/microservices-with-rust/docker-compose-ci.yaml
          push: true
          set: |
            *.cache-from=type=gha        # Use GitHub Actions cache as the source for build cache
            *.cache-to=type=gha,mode=max # Save the build cache to GitHub Actions with maximum mode
